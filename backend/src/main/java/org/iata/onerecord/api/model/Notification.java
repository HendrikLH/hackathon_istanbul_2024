
package org.iata.onerecord.api.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import cz.cvut.kbss.jopa.vocabulary.RDFS;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.api.Vocabulary;
import org.iata.onerecord.cargo.model.LogisticsObject;

import java.io.Serializable;
import java.net.URI;
import java.util.Map;
import java.util.Set;


/**
 * Notification sent by the publisher to the subscriber
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Notification )
@SuperBuilder
@EqualsAndHashCode
public class Notification
    implements Serializable
{

    @Id(generated = true)
    protected String id;
    @OWLAnnotationProperty(iri = RDFS.LABEL)
    protected String name;
    @OWLAnnotationProperty(iri = cz.cvut.kbss.jopa.vocabulary.DC.Elements.DESCRIPTION)
    protected String description;
    @Types
    protected Set<String> types;
    @Properties
    protected Map<String, Set<String>> properties;
    @OWLObjectProperty(iri = Vocabulary.s_p_hasEventType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_NotificationEventType, min = 1, max = 1)
    })
    protected NotificationEventType hasEventType;
    /**
     * A reference to a cargo:LogisticsObject.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasLogisticsObject)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_LogisticsObject, max = 1)
    })
    protected LogisticsObject hasLogisticsObject;
    /**
     * Optional URI to the ChangeRequest that triggered a Notification if the eventType is one of CHANGE_REQUEST_ACCEPTED, CHANGE_REQUEST_REJECT, or CHANGE_REQUEST_FAILED
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_isTriggeredBy)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_ActionRequest, max = 1)
    })
    protected ActionRequest isTriggeredBy;
    /**
     * List of all changed properties as IRIs after a ChangeRequest was successfully applied, e.g. [https://onerecord.iata.org/ns/cargo#hasVolumetricWeight, https://onerecord.iata.org/ns/cargo/#hasGoodsDescription]
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasChangedProperty)
    protected Set<URI> hasChangedProperty;
    /**
     * The type of cargo:LogisticsObject in the notification e.g. https://onerecord.iata.org/ns/cargo#Piece
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_hasLogisticsObjectType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#anyURI", max = 1)
    })
    protected URI hasLogisticsObjectType;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {
        return ((((("Notification {"+ name)+"<")+ id)+">")+"}");
    }

    public void setHasEventType(NotificationEventType hasEventType) {
        this.hasEventType = hasEventType;
    }

    public NotificationEventType getHasEventType() {
        return hasEventType;
    }

    public void setHasLogisticsObject(LogisticsObject hasLogisticsObject) {
        this.hasLogisticsObject = hasLogisticsObject;
    }

    public LogisticsObject getHasLogisticsObject() {
        return hasLogisticsObject;
    }

    public void setIsTriggeredBy(ActionRequest isTriggeredBy) {
        this.isTriggeredBy = isTriggeredBy;
    }

    public ActionRequest getIsTriggeredBy() {
        return isTriggeredBy;
    }

    public void setHasChangedProperty(Set<URI> hasChangedProperty) {
        this.hasChangedProperty = hasChangedProperty;
    }

    public Set<URI> getHasChangedProperty() {
        return hasChangedProperty;
    }

    public void setHasLogisticsObjectType(URI hasLogisticsObjectType) {
        this.hasLogisticsObjectType = hasLogisticsObjectType;
    }

    public URI getHasLogisticsObjectType() {
        return hasLogisticsObjectType;
    }

}
