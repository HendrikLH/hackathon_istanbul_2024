
package org.iata.onerecord.api.model;

import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.api.Vocabulary;

import java.io.Serializable;


/**
 * SubscriptionRequest initiated by subscribers to publisher (data holder) for themselves or for a third party subscriber.
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_SubscriptionRequest )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
public class SubscriptionRequest
    extends ActionRequest
    implements Serializable
{

    /**
     * Link to the requestors Subscription object with all subscription information
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_hasSubscription)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Subscription, min = 1, max = 1)
    })
    protected Subscription hasSubscription;

    public void setHasSubscription(Subscription hasSubscription) {
        this.hasSubscription = hasSubscription;
    }

    public Subscription getHasSubscription() {
        return hasSubscription;
    }

}
