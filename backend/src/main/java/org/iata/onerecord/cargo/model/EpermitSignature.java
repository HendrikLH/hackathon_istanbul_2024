
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.time.OffsetDateTime;


/**
 * Signature details of the Epermit for Live Animals
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_EpermitSignature )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
public class EpermitSignature
    extends LogisticsObject
{

    /**
     * Reference to the LiveAnimalsEpermit this Signature applies to
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_forEpermit)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected LiveAnimalsEpermit forEpermit;
    /**
     * Signatory company name
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_signatoryCompany)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Company signatoryCompany;
    /**
     * Role of the signatory with regards to the ePermit: Applicant, Permit issuer, Issuing Authority or Examining authority
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_signatoryRole)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected SignatoryRole signatoryRole;
    /**
     * Code specifying a type of government action such as inspection, detention, fumigation, security.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_signatureTypeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected SignatureTypeCode signatureTypeCode;
    /**
     * Security Stamp ID
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_securityStampId)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String securityStampId;
    /**
     * Date and time of the signature
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_signatureDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime signatureDate;
    /**
     * Signatory signature authentication text
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_signatureStatement)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String signatureStatement;

    public void setForEpermit(LiveAnimalsEpermit forEpermit) {
        this.forEpermit = forEpermit;
    }

    public LiveAnimalsEpermit getForEpermit() {
        return forEpermit;
    }

    public void setSignatoryCompany(Company signatoryCompany) {
        this.signatoryCompany = signatoryCompany;
    }

    public Company getSignatoryCompany() {
        return signatoryCompany;
    }

    public void setSignatoryRole(SignatoryRole signatoryRole) {
        this.signatoryRole = signatoryRole;
    }

    public SignatoryRole getSignatoryRole() {
        return signatoryRole;
    }

    public void setSignatureTypeCode(SignatureTypeCode signatureTypeCode) {
        this.signatureTypeCode = signatureTypeCode;
    }

    public SignatureTypeCode getSignatureTypeCode() {
        return signatureTypeCode;
    }

    public void setSecurityStampId(String securityStampId) {
        this.securityStampId = securityStampId;
    }

    public String getSecurityStampId() {
        return securityStampId;
    }

    public void setSignatureDate(OffsetDateTime signatureDate) {
        this.signatureDate = signatureDate;
    }

    public OffsetDateTime getSignatureDate() {
        return signatureDate;
    }

    public void setSignatureStatement(String signatureStatement) {
        this.signatureStatement = signatureStatement;
    }

    public String getSignatureStatement() {
        return signatureStatement;
    }

}
