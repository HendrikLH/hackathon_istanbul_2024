
package org.iata.onerecord.cargo.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import cz.cvut.kbss.jopa.model.annotations.*;
import lombok.EqualsAndHashCode;
import lombok.EqualsAndHashCode.Exclude;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.time.OffsetDateTime;
import java.util.Map;
import java.util.Set;


/**
 * Event details
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_LogisticsEvent )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
public class LogisticsEvent extends Thing
{

    /*
    / This is the original code from the generated class
    / This is just a helper variable to store the number of affected pieces when Milestones and Events are mapped from ESB
    */
    @Exclude
    @JsonIgnore
    protected int numberOfAffectedPieces;

    public void setNumberOfAffectedPieces(int numberOfAffectedPieces) {
        this.numberOfAffectedPieces = numberOfAffectedPieces;
    }

    public int getNumberOfAffectedPieces() {
        return numberOfAffectedPieces;
    }

    /*
     * This is the transportIdentifier identifier
     * This is just a helper variable to store the flight identifier when Milestones and Events are mapped from ESB
     */
    @Exclude
    @JsonIgnore
    protected String transportIdentifier;

    public void setTransportIdentifier(String transportIdentifier) {
        this.transportIdentifier = transportIdentifier;
    }

    public String getTransportIdentifier() {
        return transportIdentifier;
    }

    
    /**
     * Movement or milestone code. Can hold a named individual of the StatusCode core code list (corresponding to cXML code list 1.18), but can also be referring to different code lists.
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_eventCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement eventCode;
    /**
     * Refers to the URI of the linked object(s)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_eventFor)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected LogisticsObject eventFor;
    /**
     * Location of event
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_eventLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Location eventLocation;
    /**
     * Indicates type of event e.g.  Scheduled, Estimated, Actual
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_eventTimeType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected EventTimeType eventTimeType;
    /**
     * References to all associated ExternalReferences
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_externalReferences)
    protected Set<ExternalReference> externalReferences;
    /**
     * Reference to the Actor recording the LogisticsEvent
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_recordingActor)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Actor recordingActor;
    /**
     * Organization recording the LogisticsEvent
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_recordingOrganization)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Organization recordingOrganization;
    /**
     * DateTime at which the LogisticsEvent was posted
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_creationDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime creationDate;
    /**
     * Date and time of the event
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_eventDate)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime eventDate;
    /**
     * If no EventCode provided, event name - e.g. Security clearance
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_eventName)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String eventName;
    /**
     * Boolean indicating that the LogisticsEvent is only applicable for parts of the LogisticObject it was recorded for, for example for some Pieces of a Shipment
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_partialEventIndicator)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean partialEventIndicator;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {                
        String type = this.eventTimeType != null ? this.eventTimeType.getId().split("#")[1] : "null";
        String code = this.eventCode != null ? this.eventCode.getId().split("#")[1] : "null";
        String eventDate = this.eventDate != null ? this.eventDate.toString() : "null";

        return "LogisticsEvent{" + type + ", " + code + ", " + eventDate + "}";               
    }

    public void setEventCode(CodeListElement eventCode) {
        this.eventCode = eventCode;
    }

    public CodeListElement getEventCode() {
        return eventCode;
    }

    public void setEventFor(LogisticsObject eventFor) {
        this.eventFor = eventFor;
    }

    public LogisticsObject getEventFor() {
        return eventFor;
    }

    public void setEventLocation(Location eventLocation) {
        this.eventLocation = eventLocation;
    }

    public Location getEventLocation() {
        return eventLocation;
    }

    public void setEventTimeType(EventTimeType eventTimeType) {
        this.eventTimeType = eventTimeType;
    }

    public EventTimeType getEventTimeType() {
        return eventTimeType;
    }

    public void setExternalReferences(Set<ExternalReference> externalReferences) {
        this.externalReferences = externalReferences;
    }

    public Set<ExternalReference> getExternalReferences() {
        return externalReferences;
    }

    public void setRecordingActor(Actor recordingActor) {
        this.recordingActor = recordingActor;
    }

    public Actor getRecordingActor() {
        return recordingActor;
    }

    public void setRecordingOrganization(Organization recordingOrganization) {
        this.recordingOrganization = recordingOrganization;
    }

    public Organization getRecordingOrganization() {
        return recordingOrganization;
    }

    public void setCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
    }

    public OffsetDateTime getCreationDate() {
        return creationDate;
    }

    public void setEventDate(OffsetDateTime eventDate) {
        this.eventDate = eventDate;
    }

    public OffsetDateTime getEventDate() {
        return eventDate;
    }

    public void setEventName(String eventName) {
        this.eventName = eventName;
    }

    public String getEventName() {
        return eventName;
    }

    public void setPartialEventIndicator(Boolean partialEventIndicator) {
        this.partialEventIndicator = partialEventIndicator;
    }

    public Boolean getPartialEventIndicator() {
        return partialEventIndicator;
    }

}
