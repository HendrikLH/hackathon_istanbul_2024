
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.OWLClass;
import cz.cvut.kbss.jopa.model.annotations.OWLObjectProperty;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraint;
import cz.cvut.kbss.jopa.model.annotations.ParticipationConstraints;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.util.Set;


/**
 * Superclass: LogisticsActivity is a scheduled set of tasks that is executed as part of one or more Services
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_LogisticsActivity )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
public class LogisticsActivity
    extends LogisticsObject
{

    /**
     * References to CheckActions performed for the Activity
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_checkActions)
    protected Set<Check> checkActions;
    /**
     * Information about contactDetails
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_contactDetails)
    protected Set<ContactDetail> contactDetails;
    /**
     * References to Actors (Person, NonHumanActor) acting as contacts
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_contactPersons)
    protected Set<Actor> contactPersons;
    /**
     * Enum stating the status of the Activity
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_executionStatus)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected ExecutionStatus executionStatus;
    /**
     * Reference to Services this Activity is executed for
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_servedServices)
    protected Set<LogisticsService> servedServices;

    public void setCheckActions(Set<Check> checkActions) {
        this.checkActions = checkActions;
    }

    public Set<Check> getCheckActions() {
        return checkActions;
    }

    public void setContactDetails(Set<ContactDetail> contactDetails) {
        this.contactDetails = contactDetails;
    }

    public Set<ContactDetail> getContactDetails() {
        return contactDetails;
    }

    public void setContactPersons(Set<Actor> contactPersons) {
        this.contactPersons = contactPersons;
    }

    public Set<Actor> getContactPersons() {
        return contactPersons;
    }

    public void setExecutionStatus(ExecutionStatus executionStatus) {
        this.executionStatus = executionStatus;
    }

    public ExecutionStatus getExecutionStatus() {
        return executionStatus;
    }

    public void setServedServices(Set<LogisticsService> servedServices) {
        this.servedServices = servedServices;
    }

    public Set<LogisticsService> getServedServices() {
        return servedServices;
    }

}
