
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import lombok.EqualsAndHashCode;
import lombok.EqualsAndHashCode.Exclude;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.util.Set;


/**
 * Individual piece or virtual grouping of pieces
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_Piece )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
@NoArgsConstructor
public class Piece
    extends PhysicalLogisticsObject    
{

    /**
     * Reference to the item(s) contained in the piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_containedItems)
    protected Set<Item> containedItems;
    /**
     * Details of contained piece(s)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_containedPieces)
    protected Set<Piece> containedPieces;
    /**
     * Goods production country, mandatory when there are no Items. Refer ISO 3166-2
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_contentProductionCountry)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement contentProductionCountry;
    /**
     * Reference to the Products describing the content of the Piece, mandatory if no data on Item level is used
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_contentProducts)
    protected Set<Product> contentProducts;
    /**
     * Customs details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_customsInformation)
    protected Set<CustomsInformation> customsInformation;
    /**
     * Dimensions details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_dimensions)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Dimensions dimensions;
    /**
     * Text holding an ULD Type Code if the Piece fulfills it before UnitComposition
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_fulfillsUldTypeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement fulfillsUldTypeCode;
    /**
     * Weight details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_grossWeight)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Value grossWeight;
    /**
     * Reference to the Piece this Item or Piece is contained in
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_inPiece)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Piece inPiece;
    /**
     * Information about other Parties involved depending on the context of use
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_involvedParties)
    protected Set<Party> involvedParties;
    /**
     * Load type of the shipment or piece (Bulk, ULD, Pallet, Loose)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_loadType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected LoadType loadType;
    /**
     * Reference to the Shipment the Piece is assigned to
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_ofShipment)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    @Exclude
    protected Shipment ofShipment;
    /**
     * Details about any other identifier, depending on the context of use
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_otherIdentifiers)
    protected Set<OtherIdentifier> otherIdentifiers;
    /**
     * Reference identifying how the package is marked. Field is hardcode to "SSCC-18", "UPC" or "Other"
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_packageMarkCoded)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected PackageMarkCode packageMarkCoded;
    /**
     * Packaging details 
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_packagingType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected PackagingType packagingType;
    /**
     * Security details of the piece
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_securityDeclarations)
    protected Set<SecurityDeclaration> securityDeclarations;
    /**
     * Three-letter special handling code (SPH)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_specialHandlingCodes)
    protected Set<SpecialHandlingCode> specialHandlingCodes;
    /**
     * Volumetric weight details
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_volumetricWeight)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected VolumetricWeight volumetricWeight;
    /**
     * Coload indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_coload)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean coload;
    /**
     * Description of goods, for the BookingShipment the commodity list defined by Modernizing Cargo Distribution MCD working group can be used as a referential.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_goodsDescription)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String goodsDescription;
    /**
     * When no value is declared for Carriage, this field may be completed with the value TRUE otherwise FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_nvdForCarriage)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean nvdForCarriage;
    /**
     * When no value is declared for Customs, this field may be completed with the value TRUE otherwise FALSE
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_nvdForCustoms)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean nvdForCustoms;
    /**
     * SSCC-18 code for the value of the package mark, company or bar code, free text, pallet code, etc.
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_packagedeIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String packagedeIdentifier;
    /**
     * Shipping marks
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_shippingMarks)
    protected Set<String> shippingMarks;
    /**
     * Shipper's Load And Count  ( total contained piece count as provided by shipper)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_slac)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#integer", max = 1)
    })
    protected Integer slac;
    /**
     * Stackable indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_stackable)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean stackable;
    /**
     * Strings to provide free text handling instructions such as SSR and OSI
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_textualHandlingInstructions)
    protected Set<String> textualHandlingInstructions;
    /**
     * Turnable indicator for the pieces (boolean)
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_turnable)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#boolean", max = 1)
    })
    protected Boolean turnable;
    /**
     * Unique Piece Identifier (UPID) of the piece. Refer IATA Recommended Practice 1689
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_upid)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String upid;

    public void setContainedItems(Set<Item> containedItems) {
        this.containedItems = containedItems;
    }

    public Set<Item> getContainedItems() {
        return containedItems;
    }

    public void setContainedPieces(Set<Piece> containedPieces) {
        this.containedPieces = containedPieces;
    }

    public Set<Piece> getContainedPieces() {
        return containedPieces;
    }

    public void setContentProductionCountry(CodeListElement contentProductionCountry) {
        this.contentProductionCountry = contentProductionCountry;
    }

    public CodeListElement getContentProductionCountry() {
        return contentProductionCountry;
    }

    public void setContentProducts(Set<Product> contentProducts) {
        this.contentProducts = contentProducts;
    }

    public Set<Product> getContentProducts() {
        return contentProducts;
    }

    public void setCustomsInformation(Set<CustomsInformation> customsInformation) {
        this.customsInformation = customsInformation;
    }

    public Set<CustomsInformation> getCustomsInformation() {
        return customsInformation;
    }

    public void setDimensions(Dimensions dimensions) {
        this.dimensions = dimensions;
    }

    public Dimensions getDimensions() {
        return dimensions;
    }

    public void setFulfillsUldTypeCode(CodeListElement fulfillsUldTypeCode) {
        this.fulfillsUldTypeCode = fulfillsUldTypeCode;
    }

    public CodeListElement getFulfillsUldTypeCode() {
        return fulfillsUldTypeCode;
    }

    public void setGrossWeight(Value grossWeight) {
        this.grossWeight = grossWeight;
    }

    public Value getGrossWeight() {
        return grossWeight;
    }

    public void setInPiece(Piece inPiece) {
        this.inPiece = inPiece;
    }

    public Piece getInPiece() {
        return inPiece;
    }

    public void setInvolvedParties(Set<Party> involvedParties) {
        this.involvedParties = involvedParties;
    }

    public Set<Party> getInvolvedParties() {
        return involvedParties;
    }

    public void setLoadType(LoadType loadType) {
        this.loadType = loadType;
    }

    public LoadType getLoadType() {
        return loadType;
    }

    public void setOfShipment(Shipment ofShipment) {
        this.ofShipment = ofShipment;
    }

    public Shipment getOfShipment() {
        return ofShipment;
    }

    public void setOtherIdentifiers(Set<OtherIdentifier> otherIdentifiers) {
        this.otherIdentifiers = otherIdentifiers;
    }

    public Set<OtherIdentifier> getOtherIdentifiers() {
        return otherIdentifiers;
    }

    public void setPackageMarkCoded(PackageMarkCode packageMarkCoded) {
        this.packageMarkCoded = packageMarkCoded;
    }

    public PackageMarkCode getPackageMarkCoded() {
        return packageMarkCoded;
    }

    public void setPackagingType(PackagingType packagingType) {
        this.packagingType = packagingType;
    }

    public PackagingType getPackagingType() {
        return packagingType;
    }

    public void setSecurityDeclarations(Set<SecurityDeclaration> securityDeclarations) {
        this.securityDeclarations = securityDeclarations;
    }

    public Set<SecurityDeclaration> getSecurityDeclarations() {
        return securityDeclarations;
    }

    public void setSpecialHandlingCodes(Set<SpecialHandlingCode> specialHandlingCodes) {
        this.specialHandlingCodes = specialHandlingCodes;
    }

    public Set<SpecialHandlingCode> getSpecialHandlingCodes() {
        return specialHandlingCodes;
    }

    public void setVolumetricWeight(VolumetricWeight volumetricWeight) {
        this.volumetricWeight = volumetricWeight;
    }

    public VolumetricWeight getVolumetricWeight() {
        return volumetricWeight;
    }

    public void setCoload(Boolean coload) {
        this.coload = coload;
    }

    public Boolean getCoload() {
        return coload;
    }

    public void setGoodsDescription(String goodsDescription) {
        this.goodsDescription = goodsDescription;
    }

    public String getGoodsDescription() {
        return goodsDescription;
    }

    public void setNvdForCarriage(Boolean nvdForCarriage) {
        this.nvdForCarriage = nvdForCarriage;
    }

    public Boolean getNvdForCarriage() {
        return nvdForCarriage;
    }

    public void setNvdForCustoms(Boolean nvdForCustoms) {
        this.nvdForCustoms = nvdForCustoms;
    }

    public Boolean getNvdForCustoms() {
        return nvdForCustoms;
    }

    public void setPackagedeIdentifier(String packagedeIdentifier) {
        this.packagedeIdentifier = packagedeIdentifier;
    }

    public String getPackagedeIdentifier() {
        return packagedeIdentifier;
    }

    public void setShippingMarks(Set<String> shippingMarks) {
        this.shippingMarks = shippingMarks;
    }

    public Set<String> getShippingMarks() {
        return shippingMarks;
    }

    public void setSlac(Integer slac) {
        this.slac = slac;
    }

    public Integer getSlac() {
        return slac;
    }

    public void setStackable(Boolean stackable) {
        this.stackable = stackable;
    }

    public Boolean getStackable() {
        return stackable;
    }

    public void setTextualHandlingInstructions(Set<String> textualHandlingInstructions) {
        this.textualHandlingInstructions = textualHandlingInstructions;
    }

    public Set<String> getTextualHandlingInstructions() {
        return textualHandlingInstructions;
    }

    public void setTurnable(Boolean turnable) {
        this.turnable = turnable;
    }

    public Boolean getTurnable() {
        return turnable;
    }

    public void setUpid(String upid) {
        this.upid = upid;
    }

    public String getUpid() {
        return upid;
    }

}
