
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import cz.cvut.kbss.jopa.vocabulary.RDFS;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.io.Serializable;
import java.util.Map;
import java.util.Set;


/**
 * Other Charge details from AWB as per bullet point 19 - data element 23 from AWB
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_OtherCharge )
@SuperBuilder
@EqualsAndHashCode
public class OtherCharge
    implements Serializable
{

    @Id(generated = true)
    protected String id;
    @OWLAnnotationProperty(iri = RDFS.LABEL)
    protected String name;
    @OWLAnnotationProperty(iri = cz.cvut.kbss.jopa.vocabulary.DC.Elements.DESCRIPTION)
    protected String description;
    @Types
    protected Set<String> types;
    @Properties
    protected Map<String, Set<String>> properties;
    /**
     * Indicates if charge is prepaid or collect (P, C)
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_chargePaymentType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected PrepaidCollectIndicator chargePaymentType;
    /**
     * Entitlement code to define if charges are Due carrier (C) or Due agent (A). Refer to CXML Code List 1.3
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_entitlement)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected EntitlementCode entitlement;
    /**
     * Other Charge amount
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_otherChargeAmount)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CurrencyValue otherChargeAmount;
    /**
     * Refer to CargoXML Code List 1.2 for Other Charges
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_otherChargeCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected OtherChargeCode otherChargeCode;

    public void setId(String id) {
        this.id = id;
    }

    public String getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public void setTypes(Set<String> types) {
        this.types = types;
    }

    public Set<String> getTypes() {
        return types;
    }

    public void setProperties(Map<String, Set<String>> properties) {
        this.properties = properties;
    }

    public Map<String, Set<String>> getProperties() {
        return properties;
    }

    @Override
    public String toString() {
        return ((((("OtherCharge {"+ name)+"<")+ id)+">")+"}");
    }

    public void setChargePaymentType(PrepaidCollectIndicator chargePaymentType) {
        this.chargePaymentType = chargePaymentType;
    }

    public PrepaidCollectIndicator getChargePaymentType() {
        return chargePaymentType;
    }

    public void setEntitlement(EntitlementCode entitlement) {
        this.entitlement = entitlement;
    }

    public EntitlementCode getEntitlement() {
        return entitlement;
    }

    public void setOtherChargeAmount(CurrencyValue otherChargeAmount) {
        this.otherChargeAmount = otherChargeAmount;
    }

    public CurrencyValue getOtherChargeAmount() {
        return otherChargeAmount;
    }

    public void setOtherChargeCode(OtherChargeCode otherChargeCode) {
        this.otherChargeCode = otherChargeCode;
    }

    public OtherChargeCode getOtherChargeCode() {
        return otherChargeCode;
    }

}
