
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;

import java.time.OffsetDateTime;
import java.util.Set;


/**
 * Reference documents details
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_ExternalReference )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
public class ExternalReference
    extends LogisticsObject
{

    /**
     * Location of the document, e.g. location where the document was emitted
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_createdAtLocation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Location createdAtLocation;
    /**
     * Document originator details and contacts
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_originator)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Company originator;
    /**
     * References to the LogisticsObjects referring to this external reference
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_referenceForObjects)
    protected Set<LogisticsObject> referenceForObjects;
    /**
     * Checksum of the document to validate its integrity
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_checksum)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String checksum;
    /**
     * Unique document identifier
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_documentIdentifier)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String documentIdentifier;
    /**
     * Link to the document, e.g. URL of the file where it is hosted
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_documentLink)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String documentLink;
    /**
     * If no DocumentType provided, name of the referenced document 
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_documentName)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String documentName;
    /**
     * Type of the referenced document . Can refer UNEDIFACT 11  e.g. 74 - Air Waybill, but not limited to
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_documentType)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String documentType;
    /**
     * Document version number
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_documentVersion)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String documentVersion;
    /**
     * Validity start date based on usage context
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_validFrom)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime validFrom;
    /**
     * Validity end date (date of expiry) based on usage context
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_validUntil)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#dateTime", max = 1)
    })
    protected OffsetDateTime validUntil;

    public void setCreatedAtLocation(Location createdAtLocation) {
        this.createdAtLocation = createdAtLocation;
    }

    public Location getCreatedAtLocation() {
        return createdAtLocation;
    }

    public void setOriginator(Company originator) {
        this.originator = originator;
    }

    public Company getOriginator() {
        return originator;
    }

    public void setReferenceForObjects(Set<LogisticsObject> referenceForObjects) {
        this.referenceForObjects = referenceForObjects;
    }

    public Set<LogisticsObject> getReferenceForObjects() {
        return referenceForObjects;
    }

    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }

    public String getChecksum() {
        return checksum;
    }

    public void setDocumentIdentifier(String documentIdentifier) {
        this.documentIdentifier = documentIdentifier;
    }

    public String getDocumentIdentifier() {
        return documentIdentifier;
    }

    public void setDocumentLink(String documentLink) {
        this.documentLink = documentLink;
    }

    public String getDocumentLink() {
        return documentLink;
    }

    public void setDocumentName(String documentName) {
        this.documentName = documentName;
    }

    public String getDocumentName() {
        return documentName;
    }

    public void setDocumentType(String documentType) {
        this.documentType = documentType;
    }

    public String getDocumentType() {
        return documentType;
    }

    public void setDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
    }

    public String getDocumentVersion() {
        return documentVersion;
    }

    public void setValidFrom(OffsetDateTime validFrom) {
        this.validFrom = validFrom;
    }

    public OffsetDateTime getValidFrom() {
        return validFrom;
    }

    public void setValidUntil(OffsetDateTime validUntil) {
        this.validUntil = validUntil;
    }

    public OffsetDateTime getValidUntil() {
        return validUntil;
    }

}
