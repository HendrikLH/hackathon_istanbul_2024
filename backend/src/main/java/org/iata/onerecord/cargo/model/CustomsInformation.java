
package org.iata.onerecord.cargo.model;

import cz.cvut.kbss.jopa.model.annotations.*;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;
import org.iata.onerecord.cargo.Vocabulary;


/**
 * Customs information details
 * 
 * This class was generated by OWL2Java 1.1.4
 * 
 */
@OWLClass(iri = Vocabulary.s_c_CustomsInformation )
@SuperBuilder
@EqualsAndHashCode(callSuper = true)
public class CustomsInformation
    extends LogisticsObject
{

    /**
     * Customs, Security and Regulatory Control Information Identifier. Coded indicator qualifying Customs related information: Item Number "I", Exemption Legend "L", System Downtime Reference "S", Unique Consignment Reference Number "U", Movement Reference Number "M" .
     * Refers to Code List 1.1
     * Condition: At least one of the three elements (Country Code, Information Identifier or Customs, Security and Regulatory Control Information Identifier) must be completed
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_contentCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement contentCode;
    /**
     * Country details. Refer ISO 3166-2
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_country)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement country;
    /**
     * Reference to the Piece the document was issued for
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_issuedForPiece)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Piece issuedForPiece;
    /**
     * Reference to the shipment the document was issued for
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_issuedForShipment)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected Shipment issuedForShipment;
    /**
     * Information Identifier. Code identifying a piece of information/entity e.g. "IMP" for import, "EXP" for export, "AGT" for Agent, "ISS" for The Regulated Agent Issuing the Security Status for a Consignment etc.
     * Condition: At least one of the three elements (Country Code, Information Identifier or Customs, Security and Regulatory Control Information Identifier) must be completed
     * 
     */
    @OWLObjectProperty(iri = Vocabulary.s_p_subjectCode)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = Vocabulary.s_c_Thing, max = 1)
    })
    protected CodeListElement subjectCode;
    /**
     * Free text for customs remarks, not used in OCI Composition Rules Table
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_note)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String note;
    /**
     * Supplementary Customs, Security and Regulatory Control Information
     * 
     */
    @OWLDataProperty(iri = Vocabulary.s_p_otherCustomsInformation)
    @ParticipationConstraints({
        @ParticipationConstraint(owlObjectIRI = "http://www.w3.org/2001/XMLSchema#string", max = 1)
    })
    protected String otherCustomsInformation;

    public void setContentCode(CodeListElement contentCode) {
        this.contentCode = contentCode;
    }

    public CodeListElement getContentCode() {
        return contentCode;
    }

    public void setCountry(CodeListElement country) {
        this.country = country;
    }

    public CodeListElement getCountry() {
        return country;
    }

    public void setIssuedForPiece(Piece issuedForPiece) {
        this.issuedForPiece = issuedForPiece;
    }

    public Piece getIssuedForPiece() {
        return issuedForPiece;
    }

    public void setIssuedForShipment(Shipment issuedForShipment) {
        this.issuedForShipment = issuedForShipment;
    }

    public Shipment getIssuedForShipment() {
        return issuedForShipment;
    }

    public void setSubjectCode(CodeListElement subjectCode) {
        this.subjectCode = subjectCode;
    }

    public CodeListElement getSubjectCode() {
        return subjectCode;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public String getNote() {
        return note;
    }

    public void setOtherCustomsInformation(String otherCustomsInformation) {
        this.otherCustomsInformation = otherCustomsInformation;
    }

    public String getOtherCustomsInformation() {
        return otherCustomsInformation;
    }

}
